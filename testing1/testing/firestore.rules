rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is admin
    function isAdmin() {
      return request.auth != null && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }

    // Helper function to check if user is accessing their own document
    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }

    // Users collection rules
    match /users/{userId} {
      // Allow read if:
      // 1. User is admin, OR
      // 2. User is reading their own document
      allow read: if isAdmin() || isOwner(userId);
      
      // Allow write if:
      // 1. User is admin, OR
      // 2. User is updating their own document
      allow write: if isAdmin() || isOwner(userId);
    }

    // Orders collection rules - simplified for authenticated users
    match /orders/{orderId} {
      // Allow read for authenticated users (they can only see their own orders via query)
      allow read: if isAuthenticated();
      // Allow write for authenticated users (they can only create/update their own orders)
      allow write: if isAuthenticated();
    }

    // Feedbacks collection rules - updated for community feedback viewer
    match /feedbacks/{feedbackId} {
      // Allow read for all authenticated users (for community feedback viewer)
      allow read: if isAuthenticated();
      // Allow create for authenticated users
      allow create: if isAuthenticated();
      // Allow update only for admin users
      allow update: if isAdmin();
    }

    // Announcements collection rules
    match /announcements/{announcementId} {
      allow read: if true;  // Public read access
      allow write: if isAdmin();
    }

    // Products collection rules
    match /products/{productId} {
      allow read: if isAuthenticated();  // Any authenticated user can read products
      allow write: if isAdmin();  // Only admins can create/update/delete products
    }

    // Default deny all
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
